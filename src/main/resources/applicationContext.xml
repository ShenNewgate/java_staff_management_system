<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<!-- 自己先配置数据源，再配置扫描业务逻辑组件，再配置和mybatis的整合 -->
	<!-- spring容器扫描除了@controller以外的所有注释 -->
	<!-- 敲<c然后自动提示选中context:component-scan标签 -->
	<context:component-scan base-package="com.atguigu">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- =========================================================================================== -->
	<!-- ===================Spring的配置文件，这里的主要配置和业务逻辑有关============== -->
	<!-- 数据源，事务控制，。。。 -->
	<!-- 首先点当前页面左下角Namespaces选中context，回来后敲<contex 自动提示 选中context:property-placeholder标签，用此标签引入外部的配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<!-- ====首先这是spring IOC容器，里面需要配置的话都是通过bean标签,先配置class，然后id里面的内容会提示一下就行 -->
	<!-- 在class中输入ComPool然后按alt+/提示补充 -->
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<!-- 在src/main/resources及当前目录下新建 File叫dbconfig.properties的数据源配置文件-->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
<!-- =========================================================================================== -->
<!-- =================配置和MyBatis的整合===================== -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 里面的property标签是创建SqlSessionFactoryBean所需要的一些东西 -->
	<!-- 指定MyBatis全局配置文件的位置 -->
	<!-- 在当前目录下新建一个MyBatis全局配置文件new一个Spring Bean Configuration File -->
	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	<!-- 数据源 -->
	<property name="dataSource" ref="pooledDataSource"></property>
	<!-- 指定mybatis,mapper文件的位置 -->
	<!-- 在当前目录下新建一个包，名字叫mapper -->
	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
</bean>	

	<!-- 配置扫描器，将mybatis接口的实现（因为是通过代理对象实现）加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有的dao接口的实现，加入到ioc容器中  -->
		<property name="basePackage" value="com.atguigu.crud.dao"></property>
	</bean>
	<!-- =======================配置一个可以执行批量的sqlSession================= -->
	<!-- spring与mybatis整合时候用到的sqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	
	
	<!-- =========================================================================================== -->
	<!--============================事务控制的配置 ===============================-->
	<!-- 事务管理器DataSourceTransactionManager用于事务的控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 要想能管的住事务，必须控制住数据源 -->
	<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	<!-- 开启基于注解的事务，使用xml配置形式的事务（推荐主要都是使用配置式） -->
	<!-- 首先点当前页面左下角Namespaces选中aop，回来后敲<aop 然后自动提示选中aop:config -->
	<aop:config>
		<!-- 切入点表达式 （alt+/提示或自动提示选中）-->
		<aop:pointcut expression="execution(* com.atguigu.crud.service..*(..))" id="txPoint"/>
		<!-- 配置事务增强（alt+/提示或自动提示选中） -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	
	<!-- 配置事务增强，事务如何切入 的呢与事务管理器如何产生连接的呢（有个默认属性transaction-manager="transactionManager"，而这个就是事务管理器的id，如果事务管理器名称不同，需要修改加上）-->
	<!-- 敲<tx然后自动提示选中tx:advice  -->
	<tx:advice id="txAdvice" >
		<tx:attributes>
			<!-- *代表所有方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- get*代表以get开始的所有方法 ，read-only="true"可以进行调优-->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
<!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
</beans>
